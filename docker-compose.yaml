version: "3.9"
x-logging: &loki-driver
  driver: loki
  options:
    loki-url: 'http://localhost:3100/loki/api/v1/push'
networks:
  observability:
services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - observability
    logging: *loki-driver

  loki:
    image: grafana/loki
    command:
      - "-config.file=/etc/loki/local-config.yaml"
    ports:
      - "3100:3100"
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    networks:
      - observability
    logging: *loki-driver

  tempo:
    image: grafana/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "55680"  # otlp grpc
      - "55681"  # otlp http
      - "9411"   # zipkin
    volumes:
      - ./config/tempo/tempo.yaml:/etc/tempo.yaml
      #- ./tempo-data:/tmp/tempo
    networks:
      - observability
    command:
      - "-config.file=/etc/tempo.yaml"
    logging: *loki-driver

  grafana:
    image: grafana/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    networks:
      - observability
    logging: *loki-driver

  api-service:
    depends_on:
      - tempo
      - loki
      - prometheus
      - grafana
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    networks:
      - observability
    environment:
      - OTEL_SERVICE_NAME=api-service
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://tempo:14250
    logging: *loki-driver

  customer-details-service:
    depends_on:
      - tempo
      - loki
      - prometheus
      - grafana
    build:
      context: .
      dockerfile: ./Dockerfile
#    ports:
#      - "8080:8080"
    networks:
      - observability
    environment:
      - OTEL_SERVICE_NAME=customer-details-service
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://tempo:14250
    logging: *loki-driver

  address-service:
    depends_on:
      - tempo
      - loki
      - prometheus
      - grafana
    build:
      context: .
      dockerfile: ./Dockerfile
#    ports:
#      - "8080:8080"
    networks:
      - observability
    environment:
      - OTEL_SERVICE_NAME=address-service
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://tempo:14250
    logging: *loki-driver
